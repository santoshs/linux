/*! \file 
**********************************************************************************	
* Title:						Discretix SST Debug Header File						 					
*																			
* Filename:						sst_debug.h 															
*																			
* Project, Target, subsystem:	SST 6.0, Debug 
* 
* Created:						05.03.2007														
*
* Modified:						07.06.2007										
*
* \Author						Einat Ron														
*																			
* \Remarks						Copyright (C) 2006 by Discretix Technologies Ltd.     			
*  								All Rights reserved											
**********************************************************************************/


#ifndef _DX_SST_DEBUG_H_
    #define _DX_SST_DEBUG_H_

	#include "DX_VOS_BaseTypes.h"
	#include "sst_general_config.h"
    #include "sst_debug_def.h"
	
	#define SST_DEBUG_NO_PRINT/*no printing will be performed if this flag is defined*/

	#define SST_DBG_NO_EXTRA_DATA					0xabababab
	
	#if (defined SST_DEBUG_MODE_ENABLED)
		#define SST_DBG_INIT()									SST_DBG_Init()
		#define SST_DBG_TERMINATE()								SST_DBG_Terminate()

		#ifdef SST_DEBUG_PRINT_SCREEN
			#define SST_DBG_EVENT_SEND(dbgEvent,extraData)	SST_DBG_EventOutput(dbgEvent,extraData)
		#elif defined SST_DEBUG_ENUM_LOG_FILE
			#define SST_DBG_EVENT_SEND(dbgEvent,extraData)	SST_DBG_EventOutput(dbgEvent,extraData)
		#else
			#define SST_DBG_EVENT_SEND(dbgEvent,extraData)	
		#endif
		
		#define SST_DBG_EVENT_RC_HANDLE(returnCode)				SST_DBG_EventDBReturnCodeHandle(returnCode)
	#else
		#define SST_DBG_INIT()									SST_DBG_RC_OK
		#define SST_DBG_TERMINATE()								SST_DBG_RC_OK
		#define SST_DBG_EVENT_SEND(dbgEvent,extraData)			
		#define SST_DBG_EVENT_RC_HANDLE(returnCode)
	#endif
		
    /*----------- Global type definitions ----------------------------------------*/
	typedef enum
	{
		SST_DBG_RC_OK							= 0,
		SST_DBG_RC_FAIL							= 1,
		SST_DBG_RC_ERROR_SEMAPHORE_TIMED_OUT	= 2,
		SST_DBG_RC_ERROR_SEMAPHORE_FAIL			= 3,
		SST_DBG_RC_ERROR_VOS_FAIL				= 4,

		SST_DBG_RETURN_CODES_FORCE_INT32        = 0x7FFFFFFF /* force enum to 32 bit in all compilers */

	}SSTDBGReturnCodes_t;	

	typedef enum {

		/*-----*/
        /*VCRYS*/
		/*-----*/
		/*Error events*/
		SST_DBG_EVENT_VCRYS_ERROR_VOS						= 0,
		SST_DBG_EVENT_VCRYS_ERROR_NULL_POINTER				= 1,
		SST_DBG_EVENT_VCRYS_ERROR_INSUFFICIENT_BUFFER		= 2,
		SST_DBG_EVENT_VCRYS_ERROR_BAD_PARAMETERS			= 3,
		SST_DBG_EVENT_VCRYS_ERROR_VDB						= 4,
		
		/*API events*/
		SST_DBG_EVENT_VCRYS_INIT_OK							= 5,
		SST_DBG_EVENT_VCRYS_INIT_FAILED						= 6, 
		SST_DBG_EVENT_VCRYS_TERMINATE_OK					= 7,
		SST_DBG_EVENT_VCRYS_TERMINATE_FAILED				= 8,
		SST_DBG_EVENT_VCRYS_MAC_CALC_OK						= 9,
		SST_DBG_EVENT_VCRYS_MAC_CALC_FAILED					= 10,
		SST_DBG_EVENT_VCRYS_RANDOM_GENERATE_OK				= 11,
		SST_DBG_EVENT_VCRYS_RANDOM_GENERATE_FAILED			= 12,
		SST_DBG_EVENT_VCRYS_RSA_SIGN_OK						= 13,
		SST_DBG_EVENT_VCRYS_RSA_SIGN_FAILED					= 14,
		SST_DBG_EVENT_VCRYS_RSA_VERIFY_OK					= 15,
		SST_DBG_EVENT_VCRYS_RSA_VERIFY_FAILED				= 16,
		
		SST_DBG_EVENT_VCRYS_ECC_SIGN_OK						,/*todo*/
		SST_DBG_EVENT_VCRYS_ECC_SIGN_FAILED					,
		SST_DBG_EVENT_VCRYS_ECC_VERIFY_OK					,
		SST_DBG_EVENT_VCRYS_ECC_VERIFY_FAILED				,
		
		SST_DBG_EVENT_VCRYS_CRYPT_OP_START_OK				= 17,
		SST_DBG_EVENT_VCRYS_CRYPT_OP_START_FAILED			= 18,
		SST_DBG_EVENT_VCRYS_ENCRYPT_DECRYPT_OK				= 19,
		SST_DBG_EVENT_VCRYS_ENCRYPT_DECRYPT_FAILED			= 20,
		/*TODO*/
		SST_DBG_EVENT_VCRYS_CRYPT_OP_FINISH_OK				= 23,
		SST_DBG_EVENT_VCRYS_CRYPT_OP_FINISH_FAILED			= 24,
		SST_DBG_EVENT_VCRYS_HASH_OK							= 25,
		SST_DBG_EVENT_VCRYS_HASH_FAIL						= 26,
		SST_DBG_EVENT_VCRYS_SINGLE_DECRYPT_OK				= 27,
		SST_DBG_EVENT_VCRYS_SINGLE_DECRYPT_FAIL				= 28,

		/*external API events*/
		SST_DBG_EVENT_VCRYS_AES_KEY_GENERATE_OK				= 29,
		SST_DBG_EVENT_VCRYS_AES_KEY_GENERATE_FAILED			= 30,
		SST_DBG_EVENT_VCRYS_DES_KEY_GENERATE_OK				= 31,
		SST_DBG_EVENT_VCRYS_DES_KEY_GENERATE_FAILED			= 32,
		SST_DBG_EVENT_VCRYS_HMAC_KEY_GENERATE_OK			= 33,
		SST_DBG_EVENT_VCRYS_HMAC_KEY_GENERATE_FAILED		= 34,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GENERATE_OK				= 35,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GENERATE_FAILED			= 36,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GENERATE_OK			= 37,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GENERATE_FAILED		= 38,
		SST_DBG_EVENT_VCRYS_RSA_KEY_BUILD_OK				= 39,
		SST_DBG_EVENT_VCRYS_RSA_KEY_BUILD_FAILED			= 40,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_BUILD_OK			= 41,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_BUILD_FAILED		= 42,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GET_OK					= 43,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GET_FAILED				= 44,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GET_OK				= 45,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GET_FAILED			= 46,
        		
		/*Internal events*/
		SST_DBG_EVENT_VCRYS_WRAP_KEY_FAILED							= 47,
		SST_DBG_EVENT_VCRYS_UNWRAP_KEY_FAILED						= 48,
		SST_DBG_EVENT_VCRYS_MAC_CALC_INIT_OK						= 49,
		SST_DBG_EVENT_VCRYS_MAC_CALC_INIT_FAILED					= 50,
		SST_DBG_EVENT_VCRYS_MAC_CALC_FREE_OK						= 51,
		SST_DBG_EVENT_VCRYS_MAC_CALC_FREE_FAILED					= 52,
		SST_DBG_EVENT_VCRYS_MAC_CALC_BLOCK_OK						= 53,
		SST_DBG_EVENT_VCRYS_MAC_CALC_BLOCK_FAILED					= 54,
		SST_DBG_EVENT_VCRYS_MAC_CALC_BLOCK_RESIDUE_OK				= 55,
		SST_DBG_EVENT_VCRYS_MAC_CALC_BLOCK_RESIDUE_FAILED			= 56,
		SST_DBG_EVENT_VCRYS_ERROR_CRYPT_OPERATION_NOT_STARTED		= 57,
		SST_DBG_EVENT_VCRYS_ERROR_CRYPT_OPERATION_ALREADY_STARTED	= 58,

		/*API test events*/
		SST_DBG_EVENT_VCRYS_ENCRYPT_DECRYPT_TEST_OK			= 59,
		SST_DBG_EVENT_VCRYS_ENCRYPT_DECRYPT_TEST_FAILED		= 60,
		SST_DBG_EVENT_VCRYS_ENCRYPT_DECRYPT_PRETEST_FAILED	= 61,
		SST_DBG_EVENT_VCRYS_RSA_VERIFY_TEST_OK				= 62,
		SST_DBG_EVENT_VCRYS_RSA_VERIFY_TEST_FAILED			= 63,
		SST_DBG_EVENT_VCRYS_RSA_VERIFY_PRETEST_FAILED		= 64,
		SST_DBG_EVENT_VCRYS_RSA_VERIFY_TEST_INVALID_SIG		= 65,
		SST_DBG_EVENT_VCRYS_MAC_CALC_TEST_OK				= 66,
		SST_DBG_EVENT_VCRYS_MAC_CALC_TEST_FAILED			= 67,
		SST_DBG_EVENT_VCRYS_MAC_CALC_PRETEST_FAILED			= 68,
		SST_DBG_EVENT_VCRYS_COMPARE_TEST_OK					= 69,
		SST_DBG_EVENT_VCRYS_COMPARE_TEST_FAILED				= 70,
		SST_DBG_EVENT_VCRYS_RND_GENERATE_TEST_OK			= 71,
		SST_DBG_EVENT_VCRYS_RND_GENERATE_TEST_FAILED		= 72,
		SST_DBG_EVENT_VCRYS_HASH_TEST_OK					= 73,
		SST_DBG_EVENT_VCRYS_HASH_TEST_FAILED				= 74,
		SST_DBG_EVENT_VCRYS_HASH_PRETEST_FAILED				= 75,
		SST_DBG_EVENT_VCRYS_SINGLE_DECRYPT_TEST_OK			= 76,
		SST_DBG_EVENT_VCRYS_SINGLE_DECRYPT_TEST_FAILED		= 77,
		SST_DBG_EVENT_VCRYS_SINGLE_DECRYPT_PRETEST_FAILED	= 78,
		SST_DBG_EVENT_VCRYS_BASIC_TEST_OK					= 79,
		SST_DBG_EVENT_VCRYS_BASIC_TEST_FAILED				= 80,


		/*external API test events*/
		SST_DBG_EVENT_VCRYS_AES_KEY_GENERATE_TEST_OK		= 81,
		SST_DBG_EVENT_VCRYS_AES_KEY_GENERATE_TEST_FAILED	= 82,
		SST_DBG_EVENT_VCRYS_DES_KEY_GENERATE_TEST_OK		= 83,
		SST_DBG_EVENT_VCRYS_DES_KEY_GENERATE_TEST_FAILED	= 84,
		SST_DBG_EVENT_VCRYS_HMAC_KEY_GENERATE_TEST_OK		= 85,
		SST_DBG_EVENT_VCRYS_HMAC_KEY_GENERATE_TEST_FAILED	= 86,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GENERATE_TEST_OK		= 87,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GENERATE_TEST_FAILED	= 88,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GENERATE_TEST_OK	= 89,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GENERATE_TEST_FAILED= 90,
		SST_DBG_EVENT_VCRYS_RSA_KEY_BUILD_TEST_OK			= 91,
		SST_DBG_EVENT_VCRYS_RSA_KEY_BUILD_TEST_FAILED		= 92,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_BUILD_TEST_OK		= 93,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_BUILD_TEST_FAILED	= 94,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GET_TEST_OK				= 95,
		SST_DBG_EVENT_VCRYS_RSA_KEY_GET_TEST_FAILED			= 96,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GET_TEST_OK			= 97,
		SST_DBG_EVENT_VCRYS_RSA_CRT_KEY_GET_TEST_FAILED		= 98,
		SST_DBG_EVENT_VCRYS_EXTERNAL_BASIC_TEST_OK			= 99,
		SST_DBG_EVENT_VCRYS_EXTERNAL_BASIC_TEST_FAILED		= 100,

	

		/*---*/
		/*VDB*/
		/*---*/
		/*Error events*/
		SST_DBG_EVENT_VDB_ERROR_NULL_POINTER				= 101,
		SST_DBG_EVENT_VDB_ERROR_DB_WRITE					= 102,
		SST_DBG_EVENT_VDB_ERROR_VOS							= 103,
		SST_DBG_EVENT_VDB_ERROR_VCRYS						= 104,
		SST_DBG_EVENT_VDB_ERROR_NOT_EXISTS					= 105,
		SST_DBG_EVENT_VDB_ERROR_ALREADY_EXISTS				= 106,
		SST_DBG_EVENT_VDB_ERROR_NOT_OPEN					= 107,
		SST_DBG_EVENT_VDB_ERROR_ALREADY_OPEN				= 108,
		SST_DBG_EVENT_VDB_ERROR_HANDLE_NOT_FOUND			= 109,
		SST_DBG_EVENT_VDB_ERROR_RECORD_HANDLE_DUPLICATE		= 110,
		SST_DBG_EVENT_VDB_ERROR_RECORD_HANDLE_RND_DUPLICATE = 111,
		SST_DBG_EVENT_VDB_ERROR_RECORD_HANDLE_NOT_FOUND		= 112,
		SST_DBG_EVENT_VDB_ERROR_TRANSACTION_NOT_STARTED		= 113,
		SST_DBG_EVENT_VDB_ERROR_TRANSACTION_STARTED			= 114,
		SST_DBG_EVENT_VDB_ERROR_TRANSACTION_ID_INCORRECT	= 115,
		SST_DBG_EVENT_VDB_ERROR_TRANSACTION_TIMED_OUT		= 116,
		SST_DBG_EVENT_VDB_ERROR_ITERATOR_INVALID			= 117, 
		SST_DBG_EVENT_VDB_ERROR_ITERATOR_BEGIN				= 118,
		SST_DBG_EVENT_VDB_ERROR_ITERATOR_END				= 119,
		SST_DBG_EVENT_VDB_ERROR_SEMAPHORE					= 120,
		SST_DBG_EVENT_VDB_ERROR_SCRATCH_BUFF_NOT_SUFFICIENT = 121,
		SST_DBG_EVENT_VDB_ERROR_SIZE_MISMATCH				= 122,
		SST_DBG_EVENT_VDB_ERROR_INTEGRITY					= 123,
		SST_DBG_EVENT_VDB_ERROR_BAD_PARAMETERS				= 124,

		/*API events*/
		SST_DBG_EVENT_VDB_INIT1_OK							= 125,
		SST_DBG_EVENT_VDB_INIT1_FAIL						= 126,
		SST_DBG_EVENT_VDB_INIT2_OK							= 127,
		SST_DBG_EVENT_VDB_INIT2_FAIL						= 128,
		SST_DBG_EVENT_VDB_TERMINATE_OK						= 129,
        SST_DBG_EVENT_VDB_TERMINATE_DBG_OK, /*todo*/
		SST_DBG_EVENT_VDB_TERMINATE_FAIL					= 130,
		SST_DBG_EVENT_VDB_DELETE_OK							= 131,
		SST_DBG_EVENT_VDB_DELETE_FAIL						= 132,
		
		SST_DBG_EVENT_VDB_RECORD_INSERT_OK					= 133,
		SST_DBG_EVENT_VDB_RECORD_INSERT_FAIL				= 134,
		SST_DBG_EVENT_VDB_RECORD_REMOVE_OK					= 135,
		SST_DBG_EVENT_VDB_RECORD_REMOVE_FAIL				= 136,
		SST_DBG_EVENT_VDB_RECORD_NO_LEN_CHANGE_MODIFY_OK	= 137, 
		SST_DBG_EVENT_VDB_RECORD_NO_LEN_CHANGE_MODIFY_FAIL 	= 138,
		SST_DBG_EVENT_VDB_RECORD_WITH_LEN_CHANGE_MODIFY_OK, /*todo*/
		SST_DBG_EVENT_VDB_RECORD_WITH_LEN_CHANGE_MODIFY_FAIL,
		SST_DBG_EVENT_VDB_RECORD_READ_OK 					= 139,
		SST_DBG_EVENT_VDB_RECORD_READ_FAIL 					= 140,
		SST_DBG_EVENT_VDB_RECORD_SIZE_GET_OK 				= 141, 
		SST_DBG_EVENT_VDB_RECORD_SIZE_GET_FAIL				= 142,
	
		SST_DBG_EVENT_VDB_INTEGRITY_CHECK_OK				= 143, 
		SST_DBG_EVENT_VDB_INTEGRITY_CHECK_FAIL				= 144,
		
		SST_DBG_EVENT_VDB_TRANSACTION_START_OK				= 145,
		SST_DBG_EVENT_VDB_TRANSACTION_START_FAIL			= 146,
		SST_DBG_EVENT_VDB_TRANSACTION_COMMIT_OK				= 147,
		SST_DBG_EVENT_VDB_TRANSACTION_COMMIT_FAIL			= 148,
		SST_DBG_EVENT_VDB_TRANSACTION_ROLLBACK_OK			,/*todo*/
		SST_DBG_EVENT_VDB_TRANSACTION_ROLLBACK_FAIL			,

		SST_DBG_EVENT_VDB_SEQ_ITERATOR_CREATE_OK			= 149,
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_CREATE_FAIL			= 150,
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_INCREMENT_OK			= 151, 
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_INCREMENT_FAIL		= 152,
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_DECREMENT_OK			= 153, 
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_DECREMENT_FAIL		= 154,
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_GET_CURRENT_OK		= 155, 
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_GET_CURRENT_FAIL		= 156,
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_TERMINATE_OK			= 157, 
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_TERMINATE_FAIL		= 158,
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_GET_ALL_OK			= 159, 
		SST_DBG_EVENT_VDB_SEQ_ITERATOR_GET_ALL_FAIL			= 160, 

		/*Internal events*/
		SST_DBG_EVENT_VDB_CREATE_OK									= 161,
		SST_DBG_EVENT_VDB_CREATE_FAIL								= 162,
		SST_DBG_EVENT_VDB_OPEN_OK									= 163,
		SST_DBG_EVENT_VDB_OPEN_FAIL									= 164, 
		SST_DBG_EVENT_VDB_CLOSE_OK									= 165,
		SST_DBG_EVENT_VDB_CLOSE_FAIL								= 166,
		SST_DBG_EVENT_VDB_RECORD_HANDLE_GENRATE_OK 					= 167, 
		SST_DBG_EVENT_VDB_RECORD_HANDLE_GENRATE_FAIL 				= 168,
		
		SST_DBG_EVENT_VDB_INTERNAL_INSERT_OK					= 169,
		SST_DBG_EVENT_VDB_INTERNAL_INSERT_FAIL 					= 170,
		SST_DBG_EVENT_VDB_INTERNAL_ENCRYPT_AND_INSERT_OK		= 171,
		SST_DBG_EVENT_VDB_INTERNAL_ENCRYPT_AND_INSERT_FAIL		= 172,
		SST_DBG_EVENT_VDB_INTERNAL_MOVE_OK						= 173,
		SST_DBG_EVENT_VDB_INTERNAL_MOVE_FAIL					= 174,
		SST_DBG_EVENT_VDB_INTERNAL_FIRST_BLOCK_MODIFY_OK		= 175,
		SST_DBG_EVENT_VDB_INTERNAL_FIRST_BLOCK_MODIFY_FAIL		= 176,
		SST_DBG_EVENT_VDB_INTERNAL_LAST_BLOCK_MODIFY_OK			= 177,
		SST_DBG_EVENT_VDB_INTERNAL_LAST_BLOCK_MODIFY_FAIL		= 178,
		SST_DBG_EVENT_VDB_INTERNAL_DATA_ENCRYPT_AND_MODIFY_OK	= 179,
		SST_DBG_EVENT_VDB_INTERNAL_DATA_ENCRYPT_AND_MODIFY_FAIL	= 180,
		SST_DBG_EVENT_VDB_INTERNAL_ENCRYPT_AND_MODIFY_OK		= 181,
		SST_DBG_EVENT_VDB_INTERNAL_ENCRYPT_AND_MODIFY_FAIL		= 182,
		SST_DBG_EVENT_VDB_INTERNAL_RECORD_RE_ENCRYPT_OK			= 183,
		SST_DBG_EVENT_VDB_INTERNAL_RECORD_RE_ENCRYPT_FAIL		= 184,


		/*API test events*/
		SST_DBG_EVENT_VDB_TEST_RECORD_GENERATE_OK			= 185,
		SST_DBG_EVENT_VDB_TEST_RECORD_GENERATE_FAIL			= 186,
		SST_DBG_EVENT_VDB_TEST_DATA_INSERT_OK				= 187,
		SST_DBG_EVENT_VDB_TEST_DATA_INSERT_FAIL				= 188,
		SST_DBG_EVENT_VDB_TEST_DATA_REMOVE_OK				= 189,
		SST_DBG_EVENT_VDB_TEST_DATA_REMOVE_FAIL				= 190,
		SST_DBG_EVENT_VDB_TEST_DATA_MODIFY_OK				= 191,
		SST_DBG_EVENT_VDB_TEST_DATA_MODIFY_FAIL				= 192,
		SST_DBG_EVENT_VDB_TEST_DATA_READ_OK					= 193,
		SST_DBG_EVENT_VDB_TEST_DATA_READ_FAIL				= 194,
		SST_DBG_EVENT_VDB_TEST_DATA_GET_SIZE_OK				= 195,
		SST_DBG_EVENT_VDB_TEST_DATA_GET_SIZE_FAIL			= 196,

		/*----*/
		/*VRPC*/
		/*----*/
		/*VRPC semaphore events*/
		SST_DBG_EVENT_VRPC_SEMAPHORE_FAILED					= 197,
		SST_DBG_EVENT_VRPC_SEMAPHORE_REQUEST				= 198,
		SST_DBG_EVENT_VRPC_SEMAPHORE_ACQUIRED				= 199,
		SST_DBG_EVENT_VRPC_SEMAPHORE_FREE					= 200,
		SST_DBG_EVENT_VRPC_TIMED_OUT						= 201,
		
		/*VRPC API events*/
		SST_DBG_EVENT_VRPC_INIT_OK							= 202,
		SST_DBG_EVENT_VRPC_INIT_FAILED						= 203,
		SST_DBG_EVENT_VRPC_TERMINATE_OK						= 204,
		SST_DBG_EVENT_VRPC_TERMINATE_FAILED					= 205,
		SST_DBG_EVENT_VRPC_CURRENT_GET_OK					= 206,
		SST_DBG_EVENT_VRPC_CURRENT_GET_FAILED				= 207,
		SST_DBG_EVENT_VRPC_NEXT_GET_OK						= 208,
		SST_DBG_EVENT_VRPC_NEXT_GET_FAILED					= 209,
		SST_DBG_EVENT_VRPC_INCREMENT_OK						= 210,
		SST_DBG_EVENT_VRPC_INCREMENT_FAILED					= 211,
		SST_DBG_EVENT_VRPC_SET_OK							= 212,
		SST_DBG_EVENT_VRPC_SET_FAILED						= 213,
		
		/*VRPC File events*/
		SST_DBG_EVENT_VRPC_READ_OK							= 214,
		SST_DBG_EVENT_VRPC_READ_FAILED						= 215,
		SST_DBG_EVENT_VRPC_WRITE_OK							= 216,
		SST_DBG_EVENT_VRPC_WRITE_FAILED						= 217,
		SST_DBG_EVENT_VRPC_CALC_OK							= 218,
		SST_DBG_EVENT_VRPC_OPEN_FILE_OK						= 219,
		SST_DBG_EVENT_VRPC_OPEN_FILE_FAILED					= 220,
		SST_DBG_EVENT_VRPC_CLOSE_FILE_OK					= 221,
		SST_DBG_EVENT_VRPC_CLOSE_FILE_FAILED				= 222,
		SST_DBG_EVENT_VRPC_CREATE_FILE_OK					= 223,
		SST_DBG_EVENT_VRPC_CREATE_FILE_FAILED				= 224,
		
		/*VRPC Test events*/
		SST_DBG_EVENT_VRPC_BASIC_TEST_OK					= 225,
		SST_DBG_EVENT_VRPC_BASIC_TEST_FAILED				= 226,
		SST_DBG_EVENT_VRPC_MULTI_TASK_TEST_OK				= 227,
		SST_DBG_EVENT_VRPC_MULTI_TASK_TEST_FAILED			= 228,
		SST_DBG_EVENT_VRPC_BASIC_SET_TEST_OK				= 229,
		SST_DBG_EVENT_VRPC_BASIC_SET_TEST_FAILED			= 230,
		SST_DBG_EVENT_VRPC_ITERATION_TEST_OK				= 231,
		SST_DBG_EVENT_VRPC_ITERATION_TEST_FAILED			= 232,

		/*Tasks events*/
		SST_DBG_EVENT_VRPC_TASK_CREATE_OK					= 233,
		SST_DBG_EVENT_VRPC_TASK_CREATE_FAILED				= 234,
		SST_DBG_EVENT_VRPC_TASK_DELETE_OK					= 235,
		SST_DBG_EVENT_VRPC_TASK_DELETE_FAILED				= 236,
		SST_DBG_EVENT_VRPC_TASK_STATUS_OK					= 237,
		SST_DBG_EVENT_VRPC_TASK_STATUS_FAILED				= 238,
		SST_DBG_EVENT_VRPC_TASK_TIMED_OUT					= 239,

		/*--------*/
		/*DB-ITZAM*/
		/*--------*/
		SST_DBG_EVENT_DB_ITZAM_CREATE_FAIL					= 240,
		SST_DBG_EVENT_DB_ITZAM_OPEN_FAIL					= 241,
		SST_DBG_EVENT_DB_ITZAM_CLOSE_FAIL					= 242,

		SST_DBG_EVENT_DB_ITZAM_TRAN_COMMIT_VRPC_INC_FAIL	= 243,

		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_UPDATE_TO_ROOT_OK		= 244,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_UPDATE_TO_ROOT_FAIL	= 245,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_BTREE_CALC_OK			= 246,
        SST_DBG_EVENT_DB_ITZAM_INTEGRITY_BTREE_CHECK_MAC        = 336,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_BTREE_CALC_FAIL		= 247,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_RECORD_BUFF_CALC_OK	= 248,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_RECORD_BUFF_CALC_FAIL	= 249,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_RECORD_REF_CALC_OK		= 250,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_RECORD_REF_CALC_FAIL	= 251,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_PAGE_CALC_OK			= 252,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_PAGE_CALC_FAIL			= 253,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_SCRATCH_BUFF_READ_OK	= 254,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_SCRATCH_BUFF_READ_FAIL	= 255,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_SCRATCH_BUFF_COPY_OK	= 256,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_SCRATCH_BUFF_COPY_FAIL	= 257,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_RECORD_READ_OK			= 258,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_RECORD_READ_FAIL		= 259,

		SST_DBG_EVENT_DB_ITZAM_PAGE_WRITE_FAIL				= 260,
		SST_DBG_EVENT_DB_ITZAM_PAGE_READ_FAIL				= 261,

		SST_DBG_EVENT_DB_ITZAM_SEARCH_FAIL					= 262,
		SST_DBG_EVENT_DB_ITZAM_SEARCH_REF_FAIL				= 263,
		SST_DBG_EVENT_DB_ITZAM_UPDATE_BTREE_HEADER_FAIL		= 264,

		SST_DBG_EVENT_DB_ITZAM_ADJUST_TREE_FAIL				= 265,
		SST_DBG_EVENT_DB_ITZAM_PROMOTE_INTERNAL_FAIL		= 266,
		SST_DBG_EVENT_DB_ITZAM_WRITE_KEY_FAIL				= 267,
		SST_DBG_EVENT_DB_ITZAM_REDISTRIBUTE_FAIL			= 268,
		SST_DBG_EVENT_DB_ITZAM_CONCATENATE_FAIL				= 269,

		SST_DBG_EVENT_DB_ITZAM_RECORD_REMOVE_FAIL			= 270,
		SST_DBG_EVENT_DB_ITZAM_RECORD_INSERT_FAIL			= 271,
		SST_DBG_EVENT_DB_ITZAM_RECORD_INSERT_NEW_FAIL		= 272,
		SST_DBG_EVENT_DB_ITZAM_RECORD_READ_FAIL				= 273,

		SST_DBG_EVENT_DB_ITZAM_RECORD_SIZE_GET_OK			= 274,
		SST_DBG_EVENT_DB_ITZAM_RECORD_SIZE_GET_FAIL			= 275,
		SST_DBG_EVENT_DB_ITZAM_RECORD_MODIFY_OK				= 276,
		SST_DBG_EVENT_DB_ITZAM_RECORD_MODIFY_FAIL			= 277,
		SST_DBG_EVENT_DB_ITZAM_TRANSACTION_START_FAIL		= 278,
		SST_DBG_EVENT_DB_ITZAM_TRANSACTION_COMMIT_FAIL		= 279,
        SST_DBG_EVENT_DB_ITZAM_TRANSACTION_ADD_OP_FAIL		= 332,
        SST_DBG_EVENT_DB_ITZAM_TRANSACTION_CLEAN_FAIL		= 333,
		SST_DBG_EVENT_DB_ITZAM_TRANSACTION_ROLLBACK_FAIL		,/*todo*/
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_MOM_OK,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_MOM_FAIL,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_FULL_DB_OK,
		SST_DBG_EVENT_DB_ITZAM_INTEGRITY_FULL_DB_FAIL,

		
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_CREATE_OK			= 280,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_CREATE_FAIL			= 281,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_TERMINATE_OK		= 282,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_TERMINATE_FAIL		= 283,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_INITIAL_SEARCH_OK	= 284,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_INITIAL_SEARCH_FAIL = 285,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_MOVE_AND_GET_OK		= 286,
		SST_DBG_EVENT_DB_ITZAM_SEQ_ITERATOR_MOVE_AND_GET_FAIL	= 287,
		
		SST_DBG_EVENT_DB_ITZAM_TRAVERSE_OK			= 288,
		SST_DBG_EVENT_DB_ITZAM_TRAVERSE_FAIL		= 289,
        SST_DBG_EVENT_DB_ITZAM_WRITE_FAIL           = 334,
        SST_DBG_EVENT_DB_ITZAM_READ_FAIL            = 335,
		
        /*--------*/
        /*   AA   */
        /*--------*/
        SST_DBG_EVENT_AA_ERROR								= 290,
        SST_DBG_EVENT_AA_INIT								= 291,
        SST_DBG_EVENT_AA_TERMINATE							= 292,
        SST_DBG_EVENT_AA_TERMINATE_DBG,/*todo*/
        SST_DBG_EVENT_AA_SESSION_CREATE						= 293,
        SST_DBG_EVENT_AA_SESSION_DELETE						= 294,
        SST_DBG_EVENT_AA_CHALLENGE_GET						= 295,
        SST_DBG_EVENT_AA_META_DATA_CREATE					= 296,
        SST_DBG_EVENT_AA_SESSION_AUTH_ADD					= 297,
        SST_DBG_EVENT_AA_SESSION_AUTH_REMOVE				= 298,
        SST_DBG_EVENT_AA_SESSION_AUTH_GET					= 299,
		SST_DBG_EVENT_AA_SESSION_IS_EMPTY					= 300,
        SST_DBG_EVENT_AA_AUTH_BIND							= 301,
        SST_DBG_EVENT_AA_AUTH_UNBIND						= 302,
        SST_DBG_EVENT_AA_AUTH_IS_BOUND						= 303,
        SST_DBG_EVENT_AA_AUTH_PUB_KEY_RSA_CREATE			= 304,
		SST_DBG_EVENT_AA_AUTH_PUB_KEY_ECC_CREATE,/*todo*/
		SST_DBG_EVENT_AA_AUTH_OPEN_AES						= 305,
		SST_DBG_EVENT_AA_ELEMENT_IS_BOUND					= 306,
        SST_DBG_EVENT_AA_AUTH_PWD_CREATE					= 307,
        SST_DBG_EVENT_AA_AUTH_APP_ID_CREATE,/*todo*/
        SST_DBG_EVENT_AA_AUTH_PWD_RESET_AND_CHANGE			= 308,
        SST_DBG_EVENT_AA_AUTH_PUB_KET_CREATE				= 309,
        SST_DBG_EVENT_AA_AUTH_AES_SHARED_SECRET_CREATE		= 310,
        SST_DBG_EVENT_AA_AUTH_DELETE						= 311,
        SST_DBG_EVENT_AA_META_DATA_HANDLE_GET				= 312,
        SST_DBG_EVENT_AA_META_DATA_HANDLE_SET				= 313,
        SST_DBG_EVENT_AA_AUTH_ALL_UNBIND					= 314,
        SST_DBG_EVENT_AA_AUTH_REF_CTR_MODIFY				= 315,
        SST_DBG_EVENT_AA_AUTH_MODE_MODIFY,/*todo*/
        SST_DBG_EVENT_AA_AUTH_OPEN_PUB_KEY_RSA				= 316,
		SST_DBG_EVENT_AA_AUTH_OPEN_PUB_KEY_ECC,/*todo*/
        SST_DBG_EVENT_AA_AUTH_OPEN_PWD						= 317,
        SST_DBG_EVENT_AA_AUTH_OPEN_AES_SHARED_SECRET		= 318,
		SST_DBG_EVENT_AA_READ_ONLY_SET						= 319,

        /*--------*/
        /*   IX   */
        /*--------*/

        SST_DBG_EVENT_IX_DATA_READ_FAIL                     = 320,
        SST_DBG_EVENT_IX_ITERATOR_CREATE_FAIL               = 321,
        SST_DBG_EVENT_IX_ITERATOR_GET_HANDLERS_FAIL         = 322,
        SST_DBG_EVENT_IX_ITERATOR_TERMINATE_FAIL            = 323,
        SST_DBG_EVENT_IX_DATA_INSERT_FAIL                   = 324,
        SST_DBG_EVENT_IX_DATA_MODIFY_FAIL                   = 325,
        SST_DBG_EVENT_IX_RECORD_REMOVE_FAIL                 = 326,
        SST_DBG_EVENT_IX_NEW_IND_CREATE_FAIL                = 327,
        SST_DBG_EVENT_IX_NEW_IMD_CREATE_FAIL                = 328,
        SST_DBG_EVENT_IX_IND_IN_IMD_APPEND_FAIL             = 329,
        SST_DBG_EVENT_IX_ITERATOR_GET_ALL_FAIL              = 330,
        SST_DBG_EVENT_IX_RECORD_SIZE_GET_FAIL               = 331,

        SST_DBG_EVENT_LOGGER_FORCE_INT32                    = 0x7FFFFFFF /* force enum to 32 bit in all compilers */

	}SSTDBGEventLogger_t;
	
	/*----------- Global function prototypes -------------------------------------*/
	/*!
	\brief 
	Perform Assert to the SST due to error indicated 
	@param  errorIndication	[in]	The error event that caused the assert
	**/	
	void					SST_DBG_Assert			(DxUint32_t errorIndication);

	/*!
	\brief 
	Initialize the SST DEBUG MODULE  
	@return SST_DBG_RC_OK		On success
	@return	SST_DBG_RC_FAIL		If initialization failed 
	@return	SST_DBG_RC_ERROR_SEMAPHORE_FAIL			
	@return	SST_DBG_RC_ERROR_VOS_FAIL
	**/
	SSTDBGReturnCodes_t	SST_DBG_Init				(void);
	/*!
	\brief 
	terminate the SST DEBUG MODULE  
	@return SST_DBG_RC_OK		On success
	@return	SST_DBG_RC_FAIL		If terminate failed 
	@return	SST_DBG_RC_ERROR_SEMAPHORE_FAIL	
	@return SST_DBG_RC_ERROR_SEMAPHORE_TIMED_OUT
	@return	SST_DBG_RC_ERROR_VOS_FAIL
	**/
	SSTDBGReturnCodes_t	SST_DBG_Terminate			(void);
	/*!
	\brief 
	Print Debug Events 
	@param	dbgEvent	[in]	debug event to output 
	@param	extraData	[in]	extra data on the event
	@return SST_DBG_RC_OK							On success
	@return	SST_DBG_RC_FAIL							If operation failed
	@return	SST_DBG_RC_ERROR_SEMAPHORE_TIMED_OUT	
	@return	SST_DBG_RC_ERROR_SEMAPHORE_FAIL			
	@return	SST_DBG_RC_ERROR_VOS_FAIL
	*/
	SSTDBGReturnCodes_t	SST_DBG_EventOutput			(SSTDBGEventLogger_t dbgEvent, 
													 DxUint32_t			 extraData);
	/*!
	\brief 
	Print to Debug Events to  screen
	@param	data	[in]		event code to output to screen 
	@return SST_DBG_RC_OK							On success
	**/
	SSTDBGReturnCodes_t	SST_DBG_EventScreenPrint	(SSTDBGEventLogger_t data);


	/*UTIL FUNCTION*/
	/*!
	\brief 
	check if the current enum is in the given array
	@param currentEnum [in]	The current event to check
	@param array		[in]	The events array to perform the search in
	@return SST_DBG_RC_OK		The Event exists in the list
	@return SST_DBG_RC_FAIL		The Event was not found in the list
	**/
	SSTDBGReturnCodes_t	SST_DBG_EventArrFind		(SSTDBGEventLogger_t currentEnum, 			
													 SSTDBGEventLogger_t *array);


	#ifdef SST_DEBUG_ENUM_LOG_FILE
		/*!
		\brief 
		Read any next event in event log
		@param currentEnum [out]	The current event read
		@return SST_DBG_RC_OK				On success
		@return	SST_DBG_RC_FAIL				If operation failed
		@return	SST_DBG_RC_ERROR_VOS_FAIL	VOS operation failed
		**/
		SSTDBGReturnCodes_t	SST_DBG_AnyEventNextRead	(SSTDBGEventLogger_t *currentEnum_ptr);

		/*!	
		\brief 
		Go to the start of the log file
		@return SST_DBG_RC_OK				On success
		@return	SST_DBG_RC_FAIL				If operation failed
		@return	SST_DBG_RC_ERROR_VOS_FAIL	VOS operation failed
		**/
		SSTDBGReturnCodes_t	SST_DBG_EventLogRewind		(void);

		/*!
		\brief 
		Tell the current position in the log file
		@param	currentFilePosition [out] the current file position in the file
		@return SST_DBG_RC_OK				On success
		@return	SST_DBG_RC_FAIL				If operation failed
		@return	SST_DBG_RC_ERROR_VOS_FAIL	VOS operation failed
		**/
		SSTDBGReturnCodes_t	SST_DBG_EventLogTell		(DxUint32_t *currentFilePosition_ptr);

	#endif

	/*!
	\brief 
	handle return codes from DB
	@param	dbRC	[in]	The db return code
	**/
	void	SST_DBG_EventDBReturnCodeHandle	(DxUint32_t dbRC);



#endif  /* _DX_SST_DEBUG_H_ */
